From ec0739c8977720def78bbdb8d323d2427790ad50 Mon Sep 17 00:00:00 2001
From: Agent <agent@example.com>
Date: Fri, 8 Aug 2025 07:57:03 -0700
Subject: [PATCH] refactor: unify LivePreviewCard as wrapper around
 Fahndungskarte with wizard mode adjustments

- Added disableNavigation and disableEdit props to ModernFahndungskarteProps to control navigation and editing features.
- Updated Fahndungskarte component to respect these props and avoid navigation or editing when disabled.
- Converted LivePreviewCard into a thin wrapper that converts WizardData to FahndungsData, disables navigation and edit features, and uses the Fahndungskarte component directly.
- Ensured object URLs are cleaned up on unmount to prevent memory leaks.
---
 .../fahndungen/preview/LivePreviewCard.tsx    | 293 +++---------------
 .../fahndungskarte/Fahndungskarte.tsx         |  95 ++++--
 src/components/fahndungskarte/types.ts        |  16 +
 3 files changed, 122 insertions(+), 282 deletions(-)

diff --git a/src/components/fahndungen/preview/LivePreviewCard.tsx b/src/components/fahndungen/preview/LivePreviewCard.tsx
index a5602ca..fd77d2f 100644
--- a/src/components/fahndungen/preview/LivePreviewCard.tsx
+++ b/src/components/fahndungen/preview/LivePreviewCard.tsx
@@ -1,30 +1,31 @@
 "use client";
 
-import React, { useEffect, useMemo } from "react";
-import Image from "next/image";
-import { Eye, ArrowLeft } from "lucide-react";
-import { CATEGORY_CONFIG, PRIORITY_CONFIG } from "../../fahndungskarte/types";
+import React, { useMemo, useEffect } from "react";
 import type { WizardData } from "../types/WizardTypes";
-
-interface LivePreviewCardProps {
+import type { FahndungsData } from "~/components/fahndungskarte/types";
+import Fahndungskarte from "~/components/fahndungskarte/Fahndungskarte";
+
+/**
+ * Wrapper‑Komponente für die Live‑Vorschau einer Fahndungskarte im Wizard.
+ *
+ * Diese Komponente konvertiert die vom Wizard bereitgestellten Daten in das
+ * Format der echten Fahndungskarte und schaltet Navigation sowie
+ * Editierfunktionen ab. Dadurch bleibt die Fahndungskarte eine Single
+ * Source of Truth, Änderungen an der ursprünglichen Komponente wirken sich
+ * automatisch auch auf die Vorschau aus.
+ */
+export interface LivePreviewCardProps {
+  /** Teilweise befüllte Daten aus dem Wizard. */
   data: Partial<WizardData>;
 }
 
 const LivePreviewCard: React.FC<LivePreviewCardProps> = ({ data }) => {
-  const [state, setState] = React.useState({
-    isFlipped: false,
-    activeTab: "overview",
-    isAnimating: false,
-    imageError: false,
-    showQuickEdit: false,
-  });
-
-  // Konvertiere WizardData zu FahndungsData Format
-  const fahndungsData = useMemo(
+  // Konvertiere WizardData zu FahndungsData.
+  const fahndungsData = useMemo<FahndungsData>(
     () => ({
       step1: {
         title: data.step1?.title ?? "Titel der Fahndung",
-        category: data.step1?.category ?? "MISSING_PERSON",
+        category: (data.step1?.category as FahndungsData["step1"]["category"]) ?? "MISSING_PERSON",
         caseNumber: data.step1?.caseNumber ?? "",
       },
       step2: {
@@ -32,11 +33,12 @@ const LivePreviewCard: React.FC<LivePreviewCardProps> = ({ data }) => {
           data.step2?.shortDescription ??
           "Kurzbeschreibung wird hier angezeigt...",
         description: data.step2?.description ?? "",
-        priority: data.step2?.priority ?? "normal",
+        priority: (data.step2?.priority as FahndungsData["step2"]["priority"]) ?? "normal",
         tags: data.step2?.tags ?? [],
         features: data.step2?.features ?? "",
       },
       step3: {
+        // Verwende entweder die bereits hochgeladene URL oder erstelle bei File‑Objekten eine ObjectURL
         mainImage:
           data.step3?.mainImageUrl ??
           (data.step3?.mainImage
@@ -49,9 +51,11 @@ const LivePreviewCard: React.FC<LivePreviewCardProps> = ({ data }) => {
           data.step3?.additionalImageUrls &&
           data.step3.additionalImageUrls.length > 0
             ? data.step3.additionalImageUrls
-            : (data.step3?.additionalImages?.map((img) =>
-                img instanceof File ? URL.createObjectURL(img) : img,
-              ) ?? []),
+            : (
+                data.step3?.additionalImages?.map((img) =>
+                  img instanceof File ? URL.createObjectURL(img) : img,
+                ) ?? []
+              ),
         additionalImageUrls: data.step3?.additionalImageUrls,
       },
       step4: {
@@ -62,7 +66,7 @@ const LivePreviewCard: React.FC<LivePreviewCardProps> = ({ data }) => {
       step5: {
         contactPerson: data.step5?.contactPerson ?? "",
         contactPhone: data.step5?.contactPhone ?? "",
-        contactEmail: data.step5?.contactEmail ?? "",
+        contactEmail: data.step5?.contactEmail ?? undefined,
         department: data.step5?.department ?? "",
         availableHours: data.step5?.availableHours ?? "",
       },
@@ -70,246 +74,35 @@ const LivePreviewCard: React.FC<LivePreviewCardProps> = ({ data }) => {
     [data],
   );
 
-  // Cleanup für File URLs
+  // Bereinige erzeugte ObjectURLs, wenn Komponenten unmountet wird
   useEffect(() => {
     return () => {
       if (data.step3?.mainImage instanceof File) {
-        const url = URL.createObjectURL(data.step3.mainImage);
-        URL.revokeObjectURL(url);
+        URL.revokeObjectURL(fahndungsData.step3.mainImage);
       }
-      data.step3?.additionalImages?.forEach((img) => {
+      data.step3?.additionalImages?.forEach((img, idx) => {
         if (img instanceof File) {
-          URL.revokeObjectURL(URL.createObjectURL(img));
+          const url = fahndungsData.step3.additionalImages[idx];
+          URL.revokeObjectURL(url);
         }
       });
     };
-  }, [data.step3]);
-
-  const category = useMemo(() => {
-    const categoryKey = fahndungsData.step1
-      .category as keyof typeof CATEGORY_CONFIG;
-    return CATEGORY_CONFIG[categoryKey] ?? CATEGORY_CONFIG.MISSING_PERSON;
-  }, [fahndungsData.step1.category]);
-
-  const priority = useMemo(() => {
-    const priorityKey = fahndungsData.step2
-      .priority as keyof typeof PRIORITY_CONFIG;
-    return PRIORITY_CONFIG[priorityKey] ?? PRIORITY_CONFIG.normal;
-  }, [fahndungsData.step2.priority]);
-
-  // Event-Handler
-  const updateState = React.useCallback(
-    (updates: Partial<typeof state>) =>
-      setState((prev) => ({ ...prev, ...updates })),
-    [],
-  );
-
-  const handleImageError = () => updateState({ imageError: true });
-
-  const flipCard = React.useCallback((): void => {
-    if (state.isAnimating) return;
-    updateState({ isAnimating: true, isFlipped: !state.isFlipped });
-    setTimeout(() => updateState({ isAnimating: false }), 500);
-  }, [state.isFlipped, state.isAnimating, updateState]);
+    // Wir möchten nur beim Unmount ausführen, daher linting ausschließen
+    // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, []);
 
   return (
     <div className="flex w-full justify-center">
-      <div
-        className="relative mx-auto h-[513px] w-full max-w-sm scale-90"
-        style={{ perspective: "1000px" }}
-        role="region"
-        aria-label={`Fahndungskarte: ${fahndungsData.step1.title}`}
-        onMouseEnter={() => updateState({ showQuickEdit: false })}
-        onMouseLeave={() => updateState({ showQuickEdit: false })}
-      >
-        <div
-          className="relative h-full w-full transition-transform duration-500 ease-out"
-          style={{
-            transformStyle: "preserve-3d",
-            transform: state.isFlipped ? "rotateY(180deg)" : "rotateY(0deg)",
-          }}
-        >
-          {/* FRONT SIDE */}
-          <div
-            className="group absolute inset-0 flex h-full w-full cursor-pointer flex-col overflow-hidden rounded-2xl border border-gray-200 bg-white shadow-lg transition-shadow duration-300 hover:shadow-xl focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 dark:border-gray-700 dark:bg-gray-900"
-            style={{ backfaceVisibility: "hidden" }}
-            onClick={flipCard}
-            role="button"
-            aria-label={`Fahndungskarte umdrehen`}
-            tabIndex={state.isFlipped ? -1 : 0}
-            onKeyDown={(e) => {
-              if (e.key === "Enter" || e.key === " ") {
-                e.preventDefault();
-                flipCard();
-              }
-            }}
-          >
-            {/* Image Section */}
-            <div
-              className="relative w-full overflow-hidden bg-gray-100 dark:bg-gray-800"
-              style={{ height: "60%" }}
-            >
-              <Image
-                src={
-                  fahndungsData.step3?.mainImage ||
-                  "/images/placeholders/fotos/platzhalterbild.svg"
-                }
-                alt={`Hauptfoto von ${fahndungsData.step1.title}`}
-                fill
-                sizes="(max-width: 768px) 100vw, 50vw"
-                className="object-cover transition-transform duration-500 group-hover:scale-105"
-                priority={true}
-                loading="eager"
-                onError={handleImageError}
-              />
-
-              {fahndungsData.step2.priority !== "normal" &&
-                !state.isFlipped && (
-                  <div
-                    className={`absolute right-4 top-4 rounded px-2 py-0.5 text-xs font-bold text-white ${priority.color} ${priority.pulse ? "animate-pulse" : ""}`}
-                    style={{ zIndex: 1 }}
-                    role="status"
-                    aria-label={`Priority: ${priority.label}`}
-                  >
-                    {priority.label}
-                  </div>
-                )}
-
-              {/* Category Badge */}
-              <div
-                className="absolute left-4 top-4 rounded bg-blue-600 px-2 py-0.5 text-xs font-bold text-white"
-                style={{ zIndex: 1 }}
-                role="status"
-                aria-label={`Kategorie: ${category.label}`}
-              >
-                {category.label}
-              </div>
-            </div>
-
-            {/* Info Section */}
-            <div className="flex flex-1 flex-col justify-between p-4">
-              <div className="space-y-2">
-                <h3 className="line-clamp-2 text-lg font-bold text-gray-900 dark:text-white">
-                  {fahndungsData.step1.title}
-                </h3>
-                <p className="line-clamp-2 text-sm text-gray-600 dark:text-gray-300">
-                  {fahndungsData.step2.shortDescription}
-                </p>
-              </div>
-
-              {/* Bottom Section */}
-              <div className="mt-auto flex items-center justify-between">
-                <div className="flex items-center gap-2">
-                  <Eye className="h-4 w-4 text-gray-500" />
-                  <span className="text-xs text-gray-500">Vorschau</span>
-                </div>
-                <button
-                  onClick={(e) => {
-                    e.stopPropagation();
-                    flipCard();
-                  }}
-                  className="flex items-center gap-1 rounded-full bg-blue-600 px-3 py-1 text-xs font-medium text-white transition-colors hover:bg-blue-700"
-                  aria-label="Karte umdrehen"
-                >
-                  <Eye className="h-3 w-3" />
-                  Details
-                </button>
-              </div>
-            </div>
-          </div>
-
-          {/* BACK SIDE */}
-          <div
-            className="absolute inset-0 flex h-full w-full flex-col overflow-hidden rounded-2xl border border-gray-200 bg-white shadow-lg dark:border-gray-700 dark:bg-gray-900"
-            style={{
-              backfaceVisibility: "hidden",
-              transform: "rotateY(180deg)",
-            }}
-            role="button"
-            aria-label="Rückseite der Fahndungskarte"
-            tabIndex={state.isFlipped ? 0 : -1}
-            onKeyDown={(e) => {
-              if (e.key === "Enter" || e.key === " ") {
-                e.preventDefault();
-                flipCard();
-              }
-            }}
-          >
-            <div className="flex h-full flex-col">
-              {/* Header */}
-              <div className="flex items-center justify-between border-b border-gray-200 p-4 dark:border-gray-700">
-                <h3 className="text-lg font-bold text-gray-900 dark:text-white">
-                  Details
-                </h3>
-                <button
-                  onClick={flipCard}
-                  className="flex items-center gap-1 rounded-full bg-gray-100 px-3 py-1 text-xs font-medium text-gray-700 transition-colors hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600"
-                  aria-label="Zurück zur Vorderseite"
-                >
-                  <ArrowLeft className="h-3 w-3" />
-                  Zurück
-                </button>
-              </div>
-
-              {/* Content */}
-              <div className="flex-1 overflow-y-auto p-4">
-                <div className="space-y-4">
-                  {/* Beschreibung */}
-                  {fahndungsData.step2.description && (
-                    <div>
-                      <h4 className="mb-2 font-semibold text-gray-900 dark:text-white">
-                        Beschreibung
-                      </h4>
-                      <p className="text-sm text-gray-600 dark:text-gray-300">
-                        {fahndungsData.step2.description}
-                      </p>
-                    </div>
-                  )}
-
-                  {/* Tags */}
-                  {fahndungsData.step2.tags &&
-                    fahndungsData.step2.tags.length > 0 && (
-                      <div>
-                        <h4 className="mb-2 font-semibold text-gray-900 dark:text-white">
-                          Schlagwörter
-                        </h4>
-                        <div className="flex flex-wrap gap-1">
-                          {fahndungsData.step2.tags.map((tag, index) => (
-                            <span
-                              key={index}
-                              className="rounded-full bg-blue-100 px-2 py-1 text-xs text-blue-800 dark:bg-blue-900 dark:text-blue-200"
-                            >
-                              {tag}
-                            </span>
-                          ))}
-                        </div>
-                      </div>
-                    )}
-
-                  {/* Kontakt */}
-                  {fahndungsData.step5.contactPerson && (
-                    <div>
-                      <h4 className="mb-2 font-semibold text-gray-900 dark:text-white">
-                        Kontakt
-                      </h4>
-                      <p className="text-sm text-gray-600 dark:text-gray-300">
-                        {fahndungsData.step5.contactPerson}
-                        {fahndungsData.step5.department && (
-                          <span className="block text-xs text-gray-500">
-                            {fahndungsData.step5.department}
-                          </span>
-                        )}
-                      </p>
-                    </div>
-                  )}
-                </div>
-              </div>
-            </div>
-          </div>
-        </div>
-      </div>
+      <Fahndungskarte
+        data={fahndungsData}
+        investigationId=""
+        disableNavigation
+        disableEdit
+        userPermissions={{ canEdit: false, canDelete: false }}
+        className="scale-90"
+      />
     </div>
   );
 };
 
-export default LivePreviewCard;
+export default LivePreviewCard;
\ No newline at end of file
diff --git a/src/components/fahndungskarte/Fahndungskarte.tsx b/src/components/fahndungskarte/Fahndungskarte.tsx
index 8e3f3fd..c1a82c3 100644
--- a/src/components/fahndungskarte/Fahndungskarte.tsx
+++ b/src/components/fahndungskarte/Fahndungskarte.tsx
@@ -18,11 +18,30 @@ import type { FahndungsData } from "./types";
 interface ModernFahndungskarteProps {
   data?: FahndungsData;
   className?: string;
+  /**
+   * Identifiziert die Untersuchung, zu der diese Karte gehört. Wenn keine ID
+   * übergeben wird oder die Navigation deaktiviert ist, wird keine
+   * Synchronisation mit dem Backend durchgeführt und alle Navigations‑Buttons
+   * sind inaktiv.
+   */
   investigationId?: string;
   userPermissions?: {
     canEdit?: boolean;
     canDelete?: boolean;
   };
+  /**
+   * Deaktiviert Navigationsfunktionen (Links zur Detailseite). Wenn diese
+   * Eigenschaft wahr ist, werden Buttons wie „Mehr erfahren“ und
+   * „Vollständige Ansicht“ nicht angezeigt und Klicks auf die Karte führen
+   * nicht zu einem Seitenwechsel.
+   */
+  disableNavigation?: boolean;
+  /**
+   * Deaktiviert Editierfunktionen. Wenn wahr, werden der Quick‑Edit‑Button
+   * sowie Bearbeiten‑Schaltflächen ausgeblendet, unabhängig von
+   * `userPermissions`.
+   */
+  disableEdit?: boolean;
 }
 
 const Fahndungskarte: React.FC<ModernFahndungskarteProps> = ({
@@ -30,6 +49,8 @@ const Fahndungskarte: React.FC<ModernFahndungskarteProps> = ({
   className = "",
   investigationId,
   userPermissions,
+  disableNavigation,
+  disableEdit,
 }) => {
   const router = useRouter();
   const [state, setState] = useState({
@@ -47,7 +68,12 @@ const Fahndungskarte: React.FC<ModernFahndungskarteProps> = ({
     isDataLoading,
     networkError,
     handleRetry: retryFromHook,
-  } = useFahndungskarteOptimized(investigationId!, propData);
+  } = useFahndungskarteOptimized(
+    // Wenn Navigation deaktiviert ist oder keine ID vorliegt, übergebe einen
+    // leeren String, damit die Hook keinen Backend‑Request auslöst
+    disableNavigation || !investigationId ? "" : investigationId!,
+    propData,
+  );
 
   const cardRef = useRef<HTMLDivElement>(null);
   const frontRef = useRef<HTMLDivElement>(null);
@@ -93,7 +119,8 @@ const Fahndungskarte: React.FC<ModernFahndungskarteProps> = ({
   }, [state.isFlipped, state.isAnimating, updateState]);
 
   const navigateToDetail = () => {
-    // 🚀 SOFORTIGE NAVIGATION
+    // 🚀 Navigation nur ausführen, wenn nicht deaktiviert und eine ID vorhanden ist
+    if (disableNavigation || !investigationId) return;
     router.push(`/fahndungen/${investigationId}`);
   };
 
@@ -247,12 +274,12 @@ const Fahndungskarte: React.FC<ModernFahndungskarteProps> = ({
           ref={frontRef}
           className="group absolute inset-0 flex h-full w-full cursor-pointer flex-col overflow-hidden rounded-2xl border border-gray-200 bg-white shadow-lg transition-shadow duration-300 hover:shadow-xl focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 dark:border-gray-700 dark:bg-gray-900"
           style={{ backfaceVisibility: "hidden" }}
-          onClick={navigateToDetail}
-          role="button"
-          aria-label={`Zur Detailseite von ${safeData.step1.title} navigieren`}
+          onClick={disableNavigation || !investigationId ? undefined : navigateToDetail}
+          role={disableNavigation || !investigationId ? undefined : "button"}
+          aria-label={disableNavigation || !investigationId ? undefined : `Zur Detailseite von ${safeData.step1.title} navigieren`}
           tabIndex={state.isFlipped ? -1 : 0}
           onKeyDown={(e) => {
-            if (e.key === "Enter" || e.key === " ") {
+            if ((e.key === "Enter" || e.key === " ") && !(disableNavigation || !investigationId)) {
               e.preventDefault();
               navigateToDetail();
             }
@@ -263,7 +290,7 @@ const Fahndungskarte: React.FC<ModernFahndungskarteProps> = ({
             className="relative w-full overflow-hidden bg-gray-100 dark:bg-gray-800"
             style={{ height: "60%" }}
           >
-            {userPermissions?.canEdit && state.showQuickEdit && (
+            {!disableEdit && userPermissions?.canEdit && state.showQuickEdit && (
               <button
                 onClick={handleQuickEdit}
                 onKeyDown={(e) => {
@@ -342,25 +369,27 @@ const Fahndungskarte: React.FC<ModernFahndungskarteProps> = ({
             </div>
 
             <div className="mt-auto flex items-center justify-between">
-              <button
-                className="flex items-center gap-1 rounded-lg border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-900 transition-all hover:bg-gray-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100 dark:hover:bg-gray-700"
-                onClick={(e) => {
-                  e.stopPropagation();
-                  navigateToDetail();
-                }}
-                onKeyDown={(e) => {
-                  if (e.key === "Enter" || e.key === " ") {
-                    e.preventDefault();
+              {!disableNavigation && investigationId && (
+                <button
+                  className="flex items-center gap-1 rounded-lg border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-900 transition-all hover:bg-gray-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100 dark:hover:bg-gray-700"
+                  onClick={(e) => {
                     e.stopPropagation();
                     navigateToDetail();
-                  }
-                }}
-                aria-label="Mehr erfahren"
-                tabIndex={0}
-              >
-                <span>Mehr erfahren</span>
-                <ArrowLeft className="h-4 w-4" />
-              </button>
+                  }}
+                  onKeyDown={(e) => {
+                    if (e.key === "Enter" || e.key === " ") {
+                      e.preventDefault();
+                      e.stopPropagation();
+                      navigateToDetail();
+                    }
+                  }}
+                  aria-label="Mehr erfahren"
+                  tabIndex={0}
+                >
+                  <span>Mehr erfahren</span>
+                  <ArrowLeft className="h-4 w-4" />
+                </button>
+              )}
 
               <button
                 ref={detailsButtonRef}
@@ -440,15 +469,17 @@ const Fahndungskarte: React.FC<ModernFahndungskarteProps> = ({
 
           <div className="border-t border-gray-200 p-4 dark:border-gray-700">
             <div className="flex items-center justify-between">
-              <button
-                onClick={navigateToDetail}
-                className="flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
-              >
-                <Eye className="h-4 w-4" />
-                Vollständige Ansicht
-              </button>
+              {!disableNavigation && investigationId && (
+                <button
+                  onClick={navigateToDetail}
+                  className="flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
+                >
+                  <Eye className="h-4 w-4" />
+                  Vollständige Ansicht
+                </button>
+              )}
 
-              {userPermissions?.canEdit && (
+              {!disableEdit && userPermissions?.canEdit && (
                 <button
                   onClick={handleQuickEdit}
                   className="flex items-center gap-2 rounded-lg border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700"
diff --git a/src/components/fahndungskarte/types.ts b/src/components/fahndungskarte/types.ts
index e09d130..e4798e8 100644
--- a/src/components/fahndungskarte/types.ts
+++ b/src/components/fahndungskarte/types.ts
@@ -59,6 +59,22 @@ export interface ModernFahndungskarteProps {
     canDelete?: boolean;
     canPublish?: boolean;
   };
+
+  /**
+   * Legt fest, ob Navigationsfunktionen ("Mehr erfahren", "Vollständige Ansicht")
+   * in der Fahndungskarte deaktiviert werden sollen.
+   * Dies ist insbesondere im Wizard sinnvoll, um unbeabsichtigte Navigation
+   * während der Bearbeitung zu verhindern.
+   */
+  disableNavigation?: boolean;
+
+  /**
+   * Deaktiviert alle Editierfunktionen innerhalb der Fahndungskarte. Wenn diese
+   * Eigenschaft gesetzt ist, werden der Schnell‑Bearbeiten‑Button sowie
+   * Bearbeiten‑Schaltflächen in der Rückansicht ausgeblendet, unabhängig von
+   * den übergebenen Benutzerrechten.
+   */
+  disableEdit?: boolean;
 }
 
 export interface FahndungLocation {
-- 
2.39.5

